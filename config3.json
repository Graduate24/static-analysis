{
  "epoints": [

  ],
  "sources" : [
    "<java.net.URLConnection: java.io.InputStream getInputStream()>",
    "<java.net.URLConnection: java.lang.Object getContent()>",
    "<java.net.URLConnection: java.lang.Object getContent(java.lang.Class[])>",
    "<java.net.URLConnection: java.lang.String getHeaderField(int)>",
    "<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>",
    "<java.net.URLConnection: java.lang.String getHeaderFieldKey(int)>",
    "<java.net.URLConnection: java.util.Map getHeaderFields()>",
    "<java.net.HttpURLConnection: java.lang.String getResponseMessage()>",
    "<java.rmi.Naming: java.lang.String[] list(java.lang.String)>",
    "<java.applet.Applet: java.lang.String getParameter(java.lang.String)>",
    "<javax.accessibility.AccessibleText: java.lang.String getAfterIndex(int,int)>",
    "<javax.accessibility.AccessibleText: java.lang.String getAtIndex(int,int)>",
    "<javax.accessibility.AccessibleText: java.lang.String getBeforeIndex(int,int)>",
    "<javax.accessibility.AccessibleText: java.lang.String getSelectedText()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>",
    "<javax.servlet.http.HttpServletRequest: javax.servlet.http.Part getPart(java.lang.String)>",
    "<javax.servlet.http.HttpServletRequest: java.util.Collection getParts()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getPathTranslated()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getRequestedSessionId()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getServletPath()>",
    "<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession()>",
    "<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession(boolean)>",
    "<javax.servlet.http.HttpServletRequest: javax.servlet.http.Cookie[] getCookies()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>",
    "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>",
    "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaderNames()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>",
    "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getAttributeNames()>",
    "<javax.servlet.http.HttpServletRequest: java.io.BufferedReader getReader()>",
    "<javax.servlet.http.HttpServletRequest: javax.servlet.ServletInputStream getInputStream()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getLocalAddr()>",
    "<javax.servlet.http.HttpServletRequest: java.util.Locale getLocale()>",
    "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getLocales()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getLocalName()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>",
    "<javax.servlet.http.HttpServletRequest: java.util.Map getParameterMap()>",
    "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getParameterNames()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
    "<javax.servlet.ServletRequest: java.lang.Object getAttribute(java.lang.String)>",
    "<javax.servlet.ServletRequest: java.util.Enumeration getAttributeNames()>",
    "<javax.servlet.ServletRequest: java.io.BufferedReader getReader()>",
    "<javax.servlet.ServletRequest: javax.servlet.ServletInputStream getInputStream()>",
    "<javax.servlet.ServletRequest: java.lang.String getLocalAddr()>",
    "<javax.servlet.ServletRequest: java.util.Locale getLocale()>",
    "<javax.servlet.ServletRequest: java.util.Enumeration getLocales()>",
    "<javax.servlet.ServletRequest: java.lang.String getLocalName()>",
    "<javax.servlet.ServletRequest: java.lang.String getParameter(java.lang.String)>",
    "<javax.servlet.ServletRequest: java.util.Map getParameterMap()>",
    "<javax.servlet.ServletRequest: java.util.Enumeration getParameterNames()>",
    "<javax.servlet.ServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
    "<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>",
    "<javax.servlet.ServletConfig: java.util.Enumeration getInitParameterNames()>",
    "<javax.servlet.ServletContext: java.lang.String getInitParameter(java.lang.String)>",
    "<javax.servlet.ServletContext: java.util.Enumeration getInitParameterNames()>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.String getQueryString()>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.String getPathTranslated()>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>",
    "<jakarta.servlet.http.HttpServletRequest: jakarta.servlet.http.Cookie[] getCookies()>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>",
    "<jakarta.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>",
    "<jakarta.servlet.http.HttpServletRequest: java.util.Enumeration getHeaderNames()>",
    "<jakarta.servlet.http.HttpServletRequest: java.io.BufferedReader getReader()>",
    "<jakarta.servlet.http.HttpServletRequest: jakarta.servlet.ServletInputStream getInputStream()>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>",
    "<jakarta.servlet.http.HttpServletRequest: java.util.Map getParameterMap()>",
    "<jakarta.servlet.http.HttpServletRequest: java.util.Enumeration getParameterNames()>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
    "<jakarta.servlet.ServletRequest: java.io.BufferedReader getReader()>",
    "<jakarta.servlet.ServletRequest: jakarta.servlet.ServletInputStream getInputStream()>",
    "<jakarta.servlet.ServletRequest: java.lang.String getParameter(java.lang.String)>",
    "<jakarta.servlet.ServletRequest: java.util.Map getParameterMap()>",
    "<jakarta.servlet.ServletRequest: java.util.Enumeration getParameterNames()>",
    "<jakarta.servlet.ServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
    "<javax.portlet.ClientDataRequest: java.io.BufferedReader getReader()>",
    "<javax.portlet.ClientDataRequest: java.io.InputStream getPortletInputStream()>",
    "<javax.portlet.PortletRequest: java.lang.String getParameter(java.lang.String)>",
    "<javax.portlet.PortletRequest: java.util.Map getParameterMap()>",
    "<javax.portlet.PortletRequest: java.util.Enumeration getParameterNames()>",
    "<javax.portlet.PortletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
    "<javax.faces.context.ExternalContext: java.util.Map getRequestCookieMap()>",
    "<javax.faces.context.ExternalContext: java.util.Map getRequestHeaderMap()>",
    "<javax.faces.context.ExternalContext: java.util.Map getRequestHeaderValuesMap()>",
    "<javax.faces.context.ExternalContext: java.util.Map getRequestParameterMap()>",
    "<javax.faces.context.ExternalContext: java.util.Iterator getRequestParameterNames()>",
    "<javax.faces.context.ExternalContext: java.util.Map getRequestParameterValuesMap()>",
    "<javax.faces.context.ExternalContext: java.lang.String getRequestPathInfo()>",
    "<javax.faces.component.ValueHolder: java.lang.Object getValue()>",
    "<javax.faces.component.ValueHolder: java.lang.Object getLocalValue()>",
    "<javax.faces.component.html.HtmlCommandButton: java.lang.Object getValue()>",
    "<javax.faces.component.UIInput: java.lang.String getRequiredMessage()>",
    "<javax.faces.component.UIInput: java.lang.String getValidatorMessage()>",
    "<org.apache.commons.fileupload.FileUploadBase: byte[] getBoundary(java.lang.String)>",
    "<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFieldName(java.lang.String)>",
    "<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFileName(org.apache.commons.fileupload.FileItemHeaders)>",
    "<org.apache.commons.fileupload.FileUploadBase: java.lang.String getHeaderEncoding()>",
    "<org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.FileItemHeaders getParsedHeaders(java.lang.String)>",
    "<org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.FileItemIterator getItemIterator(org.apache.commons.fileupload.RequestContext)>",
    "<org.apache.commons.fileupload.FileUploadBase: java.util.List parseReqhest(org.apache.commons.fileupload.RequestContext)>",
    "<com.sun.mail.smtp.SMTPTransport: java.lang.String getExtensionParameter(java.lang.String)>",
    "<com.sun.mail.smtp.SMTPTransport: java.lang.String getLastServerResponse()>",
    "<java.net.URL: java.lang.Object getContent()>",
    "<java.net.URL: java.lang.Object getContent(java.lang.Class[])>"
  ],
  "sinks" : [
    "<java.util.zip.ZipFile: void <init>(java.lang.String)>",
    "<java.util.zip.ZipFile: void <init>(java.lang.String,java.nio.charset.Charset)>",
    "<org.apache.commons.compress.archivers.zip.ZipFile: void <init>(java.lang.String)>",
    "<org.apache.commons.compress.archivers.zip.ZipFile: void <init>(java.lang.String,java.lang.String)>",
    "<java.nio.file.Files: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<java.io.FileInputStream: void <init>(java.lang.String)>",
    "<java.io.FileOutputStream: void <init>(java.lang.String)>",
    "<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>",
    "<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>",
    "<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>",
    "<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>",
    "<java.io.File: void <init>(java.io.File,java.lang.String)>",
    "<java.io.File: void <init>(java.lang.String,java.lang.String)>",
    "<java.io.File: void <init>(java.lang.String)>",
    "<java.io.File: void <init>(java.net.URI)>",
    "<java.io.FileReader: void <init>(java.lang.String)>",
    "<java.io.FileReader: void <init>(java.io.File)>",
    "<java.io.FileReader: void <init>(java.io.FileDescriptor)>",
    "<java.io.FileWriter: void <init>(java.lang.String)>",
    "<java.io.FileWriter: void <init>(java.lang.String,boolean)>",
    "<java.io.FileWriter: void <init>(java.io.File)>",
    "<java.io.FileWriter: void <init>(java.io.File,boolean)>",
    "<java.io.FileWriter: void <init>(java.io.FileDescriptor)>",
    "<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>",
    "<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>",
    "<java.net.URL: void <init>(java.lang.String)>",
    "<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>",
    "<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>",
    "<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>",
    "<java.net.URL: void <init>(java.net.URL,java.lang.String)>",
    "<java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>",
    "<org.springframework.util.ResourceUtils: java.io.File(java.lang.String)>",
    "<org.springframework.util.PropertiesPersister: void store(java.util.Properties,java.io.OutputStream,java.lang.String)>",
    "<org.springframework.util.PropertiesPersister: void storeToXml(java.util.Properties,java.io.OutputStream,java.lang.String)>",
    "<org.springframework.util.PropertiesPersister: void storeToXml(java.util.Properties,java.io.OutputStream,java.lang.String,java.lang.String)>",
    "<org.springframework.util.PropertiesPersister: void store(java.util.Properties,java.io.Writer,java.lang.String)>",
    "<oracle.jbo.html.databeans.BaseNavigatorBar: void setImageDir(java.lang.String)>",
    "<oracle.jbo.html.databeans.RowSetBrowser: void setImageDir(java.lang.String)>",
    "<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>"
  ],
  "excludes": [
    "com.alibaba.*",
    "org.springframework.*"
  ],
  "autoDetect": true,
  "project": "/home/ran/Documents/work/thusa2/ifpc-testcase/WebGoat-5.0",
  "jdk": "/home/ran/Documents/work/thusa2/ifpc-testcase/jdk/rt.jar"
}
