{
  "epoints": [
    "<org.owasp.webgoat.HammerHead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "<org.owasp.webgoat.HammerHead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "<org.owasp.webgoat.LessonSource: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "<org.owasp.webgoat.servlets.Controller: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "<org.owasp.webgoat.servlets.Controller: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>"
  ],
  "sources" : [
    "<java.net.URLConnection: java.io.InputStream getInputStream()>",
    "<java.net.URLConnection: java.lang.Object getContent()>",
    "<java.net.URLConnection: java.lang.Object getContent(java.lang.Class[])>",
    "<java.net.URLConnection: java.lang.String getHeaderField(int)>",
    "<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>",
    "<java.net.URLConnection: java.lang.String getHeaderFieldKey(int)>",
    "<java.net.URLConnection: java.util.Map getHeaderFields()>",
    "<java.net.HttpURLConnection: java.lang.String getResponseMessage()>",
    "<java.rmi.Naming: java.lang.String[] list(java.lang.String)>",
    "<java.applet.Applet: java.lang.String getParameter(java.lang.String)>",
    "<javax.accessibility.AccessibleText: java.lang.String getAfterIndex(int,int)>",
    "<javax.accessibility.AccessibleText: java.lang.String getAtIndex(int,int)>",
    "<javax.accessibility.AccessibleText: java.lang.String getBeforeIndex(int,int)>",
    "<javax.accessibility.AccessibleText: java.lang.String getSelectedText()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>",
    "<javax.servlet.http.HttpServletRequest: javax.servlet.http.Part getPart(java.lang.String)>",
    "<javax.servlet.http.HttpServletRequest: java.util.Collection getParts()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getPathTranslated()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getRequestedSessionId()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getServletPath()>",
    "<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession()>",
    "<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession(boolean)>",
    "<javax.servlet.http.HttpServletRequest: javax.servlet.http.Cookie[] getCookies()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>",
    "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>",
    "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaderNames()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.Object getAttribute(java.lang.String)>",
    "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getAttributeNames()>",
    "<javax.servlet.http.HttpServletRequest: java.io.BufferedReader getReader()>",
    "<javax.servlet.http.HttpServletRequest: javax.servlet.ServletInputStream getInputStream()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getLocalAddr()>",
    "<javax.servlet.http.HttpServletRequest: java.util.Locale getLocale()>",
    "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getLocales()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getLocalName()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>",
    "<javax.servlet.http.HttpServletRequest: java.util.Map getParameterMap()>",
    "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getParameterNames()>",
    "<javax.servlet.http.HttpServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
    "<javax.servlet.ServletRequest: java.lang.Object getAttribute(java.lang.String)>",
    "<javax.servlet.ServletRequest: java.util.Enumeration getAttributeNames()>",
    "<javax.servlet.ServletRequest: java.io.BufferedReader getReader()>",
    "<javax.servlet.ServletRequest: javax.servlet.ServletInputStream getInputStream()>",
    "<javax.servlet.ServletRequest: java.lang.String getLocalAddr()>",
    "<javax.servlet.ServletRequest: java.util.Locale getLocale()>",
    "<javax.servlet.ServletRequest: java.util.Enumeration getLocales()>",
    "<javax.servlet.ServletRequest: java.lang.String getLocalName()>",
    "<javax.servlet.ServletRequest: java.lang.String getParameter(java.lang.String)>",
    "<javax.servlet.ServletRequest: java.util.Map getParameterMap()>",
    "<javax.servlet.ServletRequest: java.util.Enumeration getParameterNames()>",
    "<javax.servlet.ServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
    "<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>",
    "<javax.servlet.ServletConfig: java.util.Enumeration getInitParameterNames()>",
    "<javax.servlet.ServletContext: java.lang.String getInitParameter(java.lang.String)>",
    "<javax.servlet.ServletContext: java.util.Enumeration getInitParameterNames()>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.String getQueryString()>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.String getPathTranslated()>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>",
    "<jakarta.servlet.http.HttpServletRequest: jakarta.servlet.http.Cookie[] getCookies()>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>",
    "<jakarta.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>",
    "<jakarta.servlet.http.HttpServletRequest: java.util.Enumeration getHeaderNames()>",
    "<jakarta.servlet.http.HttpServletRequest: java.io.BufferedReader getReader()>",
    "<jakarta.servlet.http.HttpServletRequest: jakarta.servlet.ServletInputStream getInputStream()>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>",
    "<jakarta.servlet.http.HttpServletRequest: java.util.Map getParameterMap()>",
    "<jakarta.servlet.http.HttpServletRequest: java.util.Enumeration getParameterNames()>",
    "<jakarta.servlet.http.HttpServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
    "<jakarta.servlet.ServletRequest: java.io.BufferedReader getReader()>",
    "<jakarta.servlet.ServletRequest: jakarta.servlet.ServletInputStream getInputStream()>",
    "<jakarta.servlet.ServletRequest: java.lang.String getParameter(java.lang.String)>",
    "<jakarta.servlet.ServletRequest: java.util.Map getParameterMap()>",
    "<jakarta.servlet.ServletRequest: java.util.Enumeration getParameterNames()>",
    "<jakarta.servlet.ServletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
    "<javax.portlet.ClientDataRequest: java.io.BufferedReader getReader()>",
    "<javax.portlet.ClientDataRequest: java.io.InputStream getPortletInputStream()>",
    "<javax.portlet.PortletRequest: java.lang.String getParameter(java.lang.String)>",
    "<javax.portlet.PortletRequest: java.util.Map getParameterMap()>",
    "<javax.portlet.PortletRequest: java.util.Enumeration getParameterNames()>",
    "<javax.portlet.PortletRequest: java.lang.String[] getParameterValues(java.lang.String)>",
    "<javax.faces.context.ExternalContext: java.util.Map getRequestCookieMap()>",
    "<javax.faces.context.ExternalContext: java.util.Map getRequestHeaderMap()>",
    "<javax.faces.context.ExternalContext: java.util.Map getRequestHeaderValuesMap()>",
    "<javax.faces.context.ExternalContext: java.util.Map getRequestParameterMap()>",
    "<javax.faces.context.ExternalContext: java.util.Iterator getRequestParameterNames()>",
    "<javax.faces.context.ExternalContext: java.util.Map getRequestParameterValuesMap()>",
    "<javax.faces.context.ExternalContext: java.lang.String getRequestPathInfo()>",
    "<javax.faces.component.ValueHolder: java.lang.Object getValue()>",
    "<javax.faces.component.ValueHolder: java.lang.Object getLocalValue()>",
    "<javax.faces.component.html.HtmlCommandButton: java.lang.Object getValue()>",
    "<javax.faces.component.UIInput: java.lang.String getRequiredMessage()>",
    "<javax.faces.component.UIInput: java.lang.String getValidatorMessage()>",
    "<org.apache.commons.fileupload.FileUploadBase: byte[] getBoundary(java.lang.String)>",
    "<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFieldName(java.lang.String)>",
    "<org.apache.commons.fileupload.FileUploadBase: java.lang.String getFileName(org.apache.commons.fileupload.FileItemHeaders)>",
    "<org.apache.commons.fileupload.FileUploadBase: java.lang.String getHeaderEncoding()>",
    "<org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.FileItemHeaders getParsedHeaders(java.lang.String)>",
    "<org.apache.commons.fileupload.FileUploadBase: org.apache.commons.fileupload.FileItemIterator getItemIterator(org.apache.commons.fileupload.RequestContext)>",
    "<org.apache.commons.fileupload.FileUploadBase: java.util.List parseReqhest(org.apache.commons.fileupload.RequestContext)>",
    "<com.sun.mail.smtp.SMTPTransport: java.lang.String getExtensionParameter(java.lang.String)>",
    "<com.sun.mail.smtp.SMTPTransport: java.lang.String getLastServerResponse()>",
    "<java.net.URL: java.lang.Object getContent()>",
    "<java.net.URL: java.lang.Object getContent(java.lang.Class[])>",
    "<javax.servlet.http.HttpSession: java.lang.Object getAttribute(java.lang.String)>"
  ],
  "sinks" : [
    "<java.lang.ClassLoader: java.lang.Class defineClass(byte[],int,int)>",
    "<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int)>",
    "<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.ProtectDomain)>",
    "<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,java.nio.ByteBuffer,java.security.ProtectDomain)>",
    "<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>",
    "<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>",
    "<java.lang.Runtime: java.lang.Process exec(java.lang.String)>",
    "<java.lang.Runtime: java.lang.Process exec(java.lang.String[])>",
    "<java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[])>",
    "<java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[],java.io.File)>",
    "<java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[])>",
    "<java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[],java.io.File)>",
    "<java.lang.Runtime: void load(java.lang.String)>",
    "<java.lang.Runtime: void loadLibrary(java.lang.String)>",
    "<java.lang.System: void load(java.lang.String)>",
    "<java.lang.System: void loadLibrary(java.lang.String)>",
    "<java.lang.ProcessBuilder: void <init>(java.util.List)>",
    "<java.lang.ProcessBuilder: void <init>(java.lang.String[])>",
    "<java.lang.ProcessBuilder: java.util.List command()>",
    "<java.lang.ProcessBuilder: java.lang.ProcessBuilder command(java.util.List)>",
    "<java.lang.ProcessBuilder: java.lang.ProcessBuilder command(java.lang.String[])>",
    "<java.lang.reflect.InvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>",
    "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>",
    "<javax.script.Invocable: java.lang.Object invokeFunction(java.lang.String,java.lang.Object[])>",
    "<javax.script.Invocable: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<flex.management.jmx.MBeanServerGateWay: java.lang.Object invoke(java.lang.String,java.lang.String,java.lang.Object[],java.lang.String[])>",
    "<flex.messaging.io.amf.client.AMFConnection: java.lang.Object call(java.lang.String,java.lang.Object[])>",
    "<org.apache.axis.client.AdminClient: void main(java.lang.String[])>",
    "<org.apache.axis.client.AdminClient: java.lang.String process(java.io.InputStream)>",
    "<org.apache.axis.client.AdminClient: java.lang.String process(java.lang.String)>",
    "<org.apache.axis.client.AdminClient: java.lang.String process(java.lang.String[])>",
    "<org.apache.axis.client.AdminClient: java.lang.String process(java.net.URL)>",
    "<org.apache.axis.client.AdminClient: java.lang.String process(org.apache.axis.utils.Options,java.io.InputStream)>",
    "<org.apache.axis.client.AdminClient: java.lang.String process(org.apache.axis.utils.Options,java.lang.String)>",
    "<org.apache.axis.client.Call: java.lang.Object invoke(java.lang.Object[])>",
    "<org.apache.axis.client.Call: java.lang.Object invoke(java.lang.String,java.lang.Object[])>",
    "<org.apache.axis.client.Call: java.lang.Object invoke(java.lang.String,java.lang.String,java.lang.Object[])>",
    "<org.apache.axis.client.Call: void setOperation(org.apache.axis.description.OperationDesc)>",
    "<org.apache.axis.client.Call: void setOperation(javax.xml.namespace.QName,javax.xml.namespace.QName)>",
    "<org.apache.axis.client.Call: void setOperation(javax.xml.namespace.QName,java.lang.String)>",
    "<org.apache.axis.client.Call: void setOperation(java.lang.String)>",
    "<org.apache.axis.client.Call: void setOperationName(java.lang.String)>",
    "<org.apache.axis.client.Call: void setOperationName(javax.xml.namespace.QNAme)>",
    "<org.apache.axis.client.Call: void setSOAPActionURI(java.lang.String)>",
    "<org.apache.axis.client.Call: void setTargetEndpointAddress(java.lang.String)>",
    "<org.apache.axis.client.Call: void setTargetEndpointAddress(java.net.URL)>",
    "<org.owasp.esapi.Executor: org.owasp.esapi.ExecuteResult executeSystemCommand(java.io.File,java.util.List)>",
    "<org.owasp.esapi.Executor: org.owasp.esapi.ExecuteResult executeSystemCommand(java.io.File,java.util.List,java.io.File,org.owasp.esapi.codecs.Codec,boolean,boolean)>",
    "<javax.faces.el.MethodBinding: java.lang.Object invoke(javax.faces.context.FacesContext,java.lang.Object[])>",
    "<org.springframework.util.ReflectionUtils: java.lang.Object invokeMethod(java.lang.reflect.Method,java.lang.Object)>",
    "<org.springframework.util.ReflectionUtils: java.lang.Object invokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>",
    "<org.springframework.util.ReflectionUtils: java.lang.Object invokeJdbcMethod(java.lang.reflect.Method,java.lang.Object)>",
    "<org.springframework.util.ReflectionUtils: java.lang.Object invokeJdbcMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>"
  ],
  "appPath": "/home/ran/Documents/work/thusa2/ifpc-testcase/WebGoat-5.0/WebContent/WEB-INF/classes",
  "libPaths": [
    "/home/ran/Documents/work/thusa2/ifpc-testcase/jdk/rt.jar",
    "/home/ran/Documents/work/thusa2/ifpc-testcase/WebGoat-5.0/WebContent/WEB-INF/lib"
  ],
  "excludes": [
    "com.alibaba.*",
    "org.springframework.*"
  ]
}
